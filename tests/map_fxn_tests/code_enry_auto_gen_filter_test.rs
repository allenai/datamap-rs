extern crate datamap_rs;
use datamap_rs::map_fxn::{DataProcessor, CodeEnryAutoGenFilter};


#[cfg(test)]
mod code_enry_auto_gen_filter_tests {
    use super::*;
    use serde_json::json;


    fn create_test_filter() -> CodeEnryAutoGenFilter {
        let config = json!({
            "text_field": "content",
            "path_field": "path"
        });
        CodeEnryAutoGenFilter::new(&config).unwrap()
    }

    #[test]
    fn test_regular_code_passes() {
        let filter = create_test_filter();
        let data = json!({
            "content": "function main() {\n    console.log('Hello, world!');\n}",
            "path": "src/main.js"
        });
        assert!(filter.process(data).unwrap().is_some());
    }

    #[test]
    fn test_auto_generated_comment_fails() {
        let filter = create_test_filter();
        let data = json!({
            "content": "// auto-generated file\nfunction main() {\n    console.log('Hello, world!');\n}",
            "path": "src/main.js"
        });
        assert!(filter.process(data).unwrap().is_none());
    }

    #[test]
    fn test_autogenerated_comment_fails() {
        let filter = create_test_filter();
        let data = json!({
            "content": "// autogenerated\nfunction main() {\n    console.log('Hello, world!');\n}",
            "path": "src/main.js"
        });
        assert!(filter.process(data).unwrap().is_none());
    }

    #[test]
    fn test_automatically_generated_comment_fails() {
        let filter = create_test_filter();
        let data = json!({
            "content": "/* automatically generated */\nfunction main() {\n    console.log('Hello, world!');\n}",
            "path": "src/main.js"
        });
        assert!(filter.process(data).unwrap().is_none());
    }

    #[test]
    fn test_generated_automatically_comment_fails() {
        let filter = create_test_filter();
        let data = json!({
            "content": "// generated automatically\nfunction main() {\n    console.log('Hello, world!');\n}",
            "path": "src/main.js"
        });
        assert!(filter.process(data).unwrap().is_none());
    }

    #[test]
    fn test_this_file_is_generated_comment_fails() {
        let filter = create_test_filter();
        let data = json!({
            "content": "/* this_file_is_generated */\nfunction main() {\n    console.log('Hello, world!');\n}",
            "path": "src/main.js"
        });
        assert!(filter.process(data).unwrap().is_none());
    }

    #[test]
    fn test_late_autogenerated_comment_passes() {
        let filter = create_test_filter();
        let data = json!({
            "content": "function main() {\n    console.log('Hello');\n}\n\n\n// This file is autogenerated",
            "path": "src/main.js"
        });
        assert!(filter.process(data).unwrap().is_some());
    }

}